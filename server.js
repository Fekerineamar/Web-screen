const express=require("express"),axios=require("axios"),multer=require("multer"),puppeteer=require("puppeteer"),uuid=require("uuid"),fs=require("fs"),app=express(),port=process.env.PORT||3e3,terminal=require("./route/app.js");readline=require("readline").createInterface({input:process.stdin,output:process.stdout});let files,binary,json,filesize,t,i,x,urls="urls",result="result",errors="errors",regex=/^https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$/,maxSize=1048576,r=()=>readline.question("\n=> Terminal(1)\n=> GUI(2)\n\n Choose what You Like To use: ",(e=>{1==e?terminal():2==e?gui():r()}));r();const gui=()=>{app.get("/",((e,r)=>{x=Date.now(),r.sendFile(__dirname+"/index.html"),app.use("/static",express.static("logo")),app.use("/data",express.static("result/result_"+x)),app.use(express.json())}));const e=multer.diskStorage({destination(e,r,s){s(null,urls)},filename(e,r,s){s(null,"urls_"+x+".txt"),files=r}}),r=multer({storage:e});fs.existsSync(urls)||fs.mkdirSync(urls),fs.existsSync(result)||fs.mkdirSync(result),app.post("/",r.single("myFile"),(async(e,r)=>{if(t=0,i=[],binary=!1,json=!1,filesize=!1,fs.mkdirSync(`${result}/result_${x}`),fs.mkdirSync(`${result}/result_${x}/${errors}`),fs.mkdirSync(`${result}/result_${x}/data`),!files||"text/plain"!=files.mimetype)return r.send({error:"Please upload a txt file"}),r.end(),fs.rmSync(`${result}/result_${x}`,{recursive:!0,force:!0}),void fs.rmSync(`${urls}/urls_${x}.txt`,{recursive:!0,force:!0});let s=fs.readFileSync(__dirname+`/${urls}/urls_${x}.txt`,"utf8");!0===/\ufffd/.test(s)&&(binary=!binary);try{return JSON.parse(s),void(json=!json)}catch(e){}files.size>maxSize&&(filesize=!filesize),filesize?(r.send({error:"file Too Large"}),r.end(),fs.rmSync(`${result}/result_${x}`,{recursive:!0,force:!0}),fs.rmSync(`${urls}/urls_${x}.txt`,{recursive:!0,force:!0})):binary||json?(r.send({error:"Please upload a txt file!"}),r.end(),fs.rmSync(`${result}/result_${x}`,{recursive:!0,force:!0}),fs.rmSync(`${urls}/urls_${x}.txt`,{recursive:!0,force:!0})):(()=>{try{(data=s.split("\n").filter((e=>""!=e))).forEach(((e,r)=>{regex.test(e)||(e="https://"+e),regex.test(e)&&i.push(e)})),i.length?(()=>{i=[...new Set(i)];let e=()=>{t!=i.length?(async()=>{await axios({url:i[t],timeout:2e4}).then((r=>{let s=JSON.stringify(r.headers),u=r.request.host;fs.appendFileSync(`${result}/result_${x}/data/data.txt`,u+"\n"),fs.writeFileSync(`${result}/result_${x}/data/${u}.json`,s),(async()=>{try{s=await puppeteer.launch({args:["--no-sandbox","--disabled-setupid-sandbox"]}),l=await s.newPage(),await l.goto(i[t],{timeout:2e4}),await l.screenshot({path:`result/result_${x}/data/${u}.png`}),await s.close(),t++,e()}catch(r){"TimeoutError: Navigation timeout of 20000 ms exceeded"==r&&(fs.appendFileSync(`result/result_${x}/errors/errors.txt`,`GET: ${i[t]} => Navigation timeout\n`),fs.copyFileSync("logo/default.jpg",`result/result_${x}/data/${u}.png`),t++,e())}})()})).catch((r=>{let s;s=r.response?r.response.status+" "+r.response.statusText:`${r.code} Hostname`,fs.appendFileSync(`${result}/result_${x}/${errors}/errors.txt`,`GET: ${i[t]} => ${s}\n`),t++,e()}))})(i[t]):i.length?(fs.copyFileSync("html/index.html",`${result}/result_${x}/result.html`),r.send({success:!0})):(r.send({error:"Please upload a valid URL's"}),r.end(),fs.rmSync(`${result}/result_${x}`,{recursive:!0,force:!0}),fs.rmSync(`${urls}/urls_${x}.txt`,{recursive:!0,force:!0}))};e()})():(r.send({error:"Please upload a valid URL's"}),fs.rmSync(`${result}/result_${x}`,{recursive:!0,force:!0}),fs.rmSync(`${urls}/urls_${x}.txt`,{recursive:!0,force:!0}),r.end())}catch(e){}})()})),app.get("/result",((e,r)=>{i.length?r.sendFile(__dirname+`/result/result_${x}/result.html`):r.redirect("/")})),app.listen(port,(()=>console.log(`Go To http://127.0.0.1:${port}`)))};